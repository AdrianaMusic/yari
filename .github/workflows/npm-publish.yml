name: NPM Publish

on:
  push:
    branches: [master]

  # TEMPORARY
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Prep .npmignore
        run: |
          set -e
          cat .gitignore >> .npmignore
          # Make an exception of general build artifacts that we actually
          # do want to keep in the npm tarball.
          sed -i '/ssr\/dist/d' .npmignore
          sed -i '/client\/build/d' .npmignore
          cat .npmignore

      - name: Setup Node.js environment
        uses: actions/setup-node@v2.1.1
        with:
          node-version: "12"

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2.1.1
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install all yarn packages
        run: yarn --frozen-lockfile

      - name: Build the build
        run: yarn prepare-build

      - name: Dry-run publish to see which files are included
        run: |
          npm publish --access public --dry-run

      - name: Publish to npmjs
        uses: mikeal/merge-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
